services:
  app:
    image: note-snap
    build:
      context: .
    depends_on:
      database:
        condition: service_healthy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.note-snap.tls=true"
      - "traefik.http.routers.note-snap.entrypoints=websecure"
      - "traefik.http.routers.note-snap-http.entrypoints=web"
      - "traefik.http.routers.note-snap-http.middlewares=note-snap-https"
      - "traefik.http.middlewares.note-snap-https.redirectscheme.scheme=https"
      - "traefik.http.services.note-snap.loadbalancer.server.port=3000"
    environment:
      - DATABASE_URL=postgres://${POSTGRES_USER:-app}:${POSTGRES_PASSWORD:-!ChangeMe!}@database:5432/${POSTGRES_DB:-app}
      - NEXTAUTH_URL=${NEXTAUTH_URL:-http://note-snap.docker.localhost}
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET:-your-development-secret-key-change-this-in-production-make-it-long-and-secure}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID:-dummy}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET:-dummy}
      - GITHUB_ID=${GITHUB_ID:-dummy}
      - GITHUB_SECRET=${GITHUB_SECRET:-dummy}
      - DISCORD_CLIENT_ID=${DISCORD_CLIENT_ID:-dummy}
      - DISCORD_CLIENT_SECRET=${DISCORD_CLIENT_SECRET:-dummy}
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/api/health"]
      timeout: 5s
      retries: 5
      start_period: 30s
    volumes:
      - pnpm_store:/app/.pnpm-store

  database:
    image: postgres:${POSTGRES_VERSION:-16}-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-app}
      # You should definitely change the password in production
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-!ChangeMe!}
      POSTGRES_USER: ${POSTGRES_USER:-app}
    healthcheck:
      test: ["CMD", "pg_isready", "-d", "${POSTGRES_DB:-app}", "-U", "${POSTGRES_USER:-app}"]
      timeout: 5s
      retries: 5
      start_period: 60s
    volumes:
      - database_data:/var/lib/postgresql/data:rw
# You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
# - ./docker/db/data:/var/lib/postgresql/data:rw

volumes:
  database_data:
  pnpm_store:
